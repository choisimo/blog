# Nginx configuration for Blog Backend API
# Place this file in /etc/nginx/sites-available/blog-api
# Then symlink: sudo ln -s /etc/nginx/sites-available/blog-api /etc/nginx/sites-enabled/

# Upstream backend server
upstream blog_backend {
    server 127.0.0.1:5080 fail_timeout=0;
    keepalive 32;
}

# HTTP server - redirects to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name api.yourdomain.com;
    
    # Redirect all HTTP traffic to HTTPS
    return 301 https://$server_name$request_uri;
}

# HTTPS server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name api.yourdomain.com;

    # SSL certificates (managed by Certbot)
    # These lines will be added automatically by: sudo certbot --nginx -d api.yourdomain.com
    # ssl_certificate /etc/letsencrypt/live/api.yourdomain.com/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/api.yourdomain.com/privkey.pem;
    # include /etc/letsencrypt/options-ssl-nginx.conf;
    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Remove server header
    server_tokens off;

    # Logging
    access_log /var/log/nginx/blog-api.access.log;
    error_log /var/log/nginx/blog-api.error.log;

    # Client body size limit (for file uploads)
    client_max_body_size 10M;
    
    # Timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;

    # Health check endpoint (no logging)
    location = /api/v1/healthz {
        access_log off;
        proxy_pass http://blog_backend;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }

    # API routes
    location /api/ {
        # Proxy headers
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # WebSocket support (if needed in future)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Proxy to backend
        proxy_pass http://blog_backend;
        
        # Disable buffering for SSE/streaming responses
        proxy_buffering off;
        
        # CORS preflight handling (backup, main CORS is in Express)
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'https://noblog.nodove.com' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
            add_header 'Access-Control-Max-Age' 86400 always;
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # Root path
    location / {
        return 404 '{"error":"Not Found","message":"This is an API server. Please use /api/* endpoints."}';
        default_type application/json;
    }

    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# Rate limiting (optional)
# limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
# 
# Then add to location /api/ block:
# limit_req zone=api_limit burst=20 nodelay;
